window.jsdapi=window.jsdapi||{};
(function(f){function l(c){var b=jsdapi.url();c&&(b+="/"+c);return b}function h(c){var b=jsdapi.url()+"/account";c&&(b+="/"+c);return b}function g(c,b){if(c.url){var a=new XMLHttpRequest,e=c.url+m(c.query);a.open(c.method,e,!0);if("arraybuffer"===c.responseType||"binaryToBase64"===c.responseType)a.responseType="arraybuffer";else if("blob"===c.responseType||"binary"===c.responseType)a.responseType="blob";c.accessToken&&a.setRequestHeader("Authorization","Bearer "+c.accessToken);c.contentType&&a.setRequestHeader("Content-Type",
c.contentType);a.onreadystatechange=function(){if(4===a.readyState){var e=null;200===a.status&&(e="json"===c.responseType?JSON.parse(a.responseText):"blob"===c.responseType||"arraybuffer"===c.responseType||"binary"===c.responseType?a.response:"binaryToBase64"===c.responseType?__arrayBufferToBase64(a.response):a.responseText);setTimeout(function(){d(b,e)},0)}};c.content?a.send(c.content):a.send()}else d(b,null)}function m(c){var b="";if(void 0!==c&&null!==c)for(var a in c)c.hasOwnProperty(a)&&(b=""===
b?"?":b+"&",b=b+encodeURIComponent(a)+"="+encodeURIComponent(c[a]));return b}function d(c){if(c)try{c.apply(this,[].slice.call(arguments).splice(1))}catch(b){dji.logger.error(b)}}f.me=function(c){jsdapi.authorize(function(b){b?(b={responseType:"json",method:"GET",url:l("openid/me"),query:{access_token:b,ignoreGrantsGiven:!0,ignoreGrantsGivenBy:!0,ignoreProducts:!0,ignoreTags:!0}},g(b,function(a){if(!a||a.error)return d(c,a||{error:500});var b={checksum:a.me.checksum,name:a.me.name};a.me.email&&(b.email=
a.me.email);if(a.me.accounts)try{var k=JSON.parse(a.me.accounts);0<k.length&&(b.account=k[0],b.account.username&&(b.username=b.account.username),b.account.provider&&(b.provider=b.account.provider))}catch(f){dji.logger.error(f)}if(!b.account)return d(c,{error:500});delete b.account;d(c,b)})):d(c,{error:401,message:"Authorization failed!"})})};f.updatePassword=function(c,b){jsdapi.authorize(function(a){if(a){var e=JSON.stringify(c);a={responseType:"json",method:"POST",url:h("password/update"),query:{access_token:a},
contentType:"application/json",content:e};g(a,function(a){d(b,a)})}else d(b,{error:401,message:"Authorization failed!"})})};f.updateAccount=function(c,b){jsdapi.authorize(function(a){if(a){var e=JSON.stringify(c);a={responseType:"json",method:"POST",url:h("update"),query:{access_token:a},contentType:"application/json",content:e};g(a,function(a){d(b,a)})}else d(b,{error:401,message:"Authorization failed!"})})};f.changePassword=function(c,b){jsdapi.authorize(function(a){if(a){var e=JSON.stringify(c);
a={responseType:"json",method:"POST",url:h("password/change"),query:{access_token:a},contentType:"application/json",content:e};g(a,function(a){d(b,a)})}else d(b,{error:401,message:"Authorization failed!"})})};f.applyActivationCode=function(c,b){jsdapi.authorize(function(a){if(a){var e=JSON.stringify(c);a={responseType:"json",method:"POST",url:h("applyActivationCode"),query:{access_token:a},contentType:"application/json",content:e};g(a,function(a){d(b,a)})}else d(b,{error:401,message:"Authorization failed!"})})};
f.getSettings=function(c){jsdapi.authorize(function(b){b?(b={responseType:"json",method:"GET",url:h("settings"),query:{access_token:b}},g(b,function(a){d(c,a)})):d(c,{error:401,message:"Authorization failed!"})})};f.updateSettings=function(c,b){jsdapi.authorize(function(a){if(a){var e=JSON.stringify(c);a={responseType:"json",method:"POST",url:h("settings/update"),query:{access_token:a},contentType:"application/json",content:e};g(a,function(a){d(b,a)})}else d(b,{error:401,message:"Authorization failed!"})})}})(window.jsdapi.account=
window.jsdapi.account||{});
