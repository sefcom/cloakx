// Generated by CoffeeScript 1.9.3
(function() {
  var _addEventListener, elementsToRegister, onLoaded, registerElementWithContentScripts, registrationElement;

  _addEventListener = Element.prototype.addEventListener;

  elementsToRegister = [];

  registrationElement = null;

  EventTarget.prototype.addEventListener = function(type, listener, useCapture) {
    var eventTarget;
    eventTarget = this === document || this === window ? document.documentElement : this;
    if (type === "click" && eventTarget instanceof Element) {
      setTimeout((function() {
        return registerElementWithContentScripts(eventTarget, "onclick");
      }), 0);
    }
    return _addEventListener.apply(this, arguments);
  };

  onLoaded = function() {
    var registrationEvent;
    registrationElement = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
    registrationEvent = new CustomEvent("VimiumRegistrationElementEvent");
    document.documentElement.appendChild(registrationElement);
    registrationElement.dispatchEvent(registrationEvent);
    document.documentElement.removeChild(registrationElement);
    elementsToRegister.map(function(args) {
      return setTimeout((function() {
        return registerElementWithContentScripts.apply(null, args);
      }), 0);
    });
    return elementsToRegister = null;
  };

  _addEventListener.call(window, "DOMContentLoaded", onLoaded, true);

  registerElementWithContentScripts = function(element, type) {
    var elementToWrap, registrationEvent, wrapInRegistrationElement;
    if (elementsToRegister != null) {
      elementsToRegister.push(arguments);
      return;
    }
    wrapInRegistrationElement = !document.contains(element);
    if (wrapInRegistrationElement) {
      elementToWrap = element;
      while (elementToWrap.parentElement != null) {
        elementToWrap = elementToWrap.parentElement;
      }
      registrationElement.appendChild(elementToWrap);
    }
    registrationEvent = new CustomEvent("VimiumRegistrationElementEvent-" + type);
    element.dispatchEvent(registrationEvent);
    if (wrapInRegistrationElement) {
      return registrationElement.removeChild(elementToWrap);
    }
  };

}).call(this);
